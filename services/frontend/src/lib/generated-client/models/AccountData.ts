/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountType } from './AccountType';
import {
    AccountTypeFromJSON,
    AccountTypeFromJSONTyped,
    AccountTypeToJSON,
} from './AccountType';

/**
 * 
 * @export
 * @interface AccountData
 */
export interface AccountData {
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    account: string;
    /**
     * 
     * @type {AccountType}
     * @memberof AccountData
     */
    accountType: AccountType;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountRep: string;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountRepEmail: string;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountRepId: string;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountant1: string;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountant1Email: string;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountant2: string | null;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountant2Email: string | null;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountant3: string | null;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountant3Email: string | null;
    /**
     * 
     * @type {Date}
     * @memberof AccountData
     */
    accountUpdatedOn: Date;
    /**
     * 
     * @type {string}
     * @memberof AccountData
     */
    accountUpdatedBy: string;
    /**
     * 
     * @type {Date}
     * @memberof AccountData
     */
    accountAddedOn: Date;
}

/**
 * Check if a given object implements the AccountData interface.
 */
export function instanceOfAccountData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "account" in value;
    isInstance = isInstance && "accountType" in value;
    isInstance = isInstance && "accountRep" in value;
    isInstance = isInstance && "accountRepEmail" in value;
    isInstance = isInstance && "accountRepId" in value;
    isInstance = isInstance && "accountant1" in value;
    isInstance = isInstance && "accountant1Email" in value;
    isInstance = isInstance && "accountant2" in value;
    isInstance = isInstance && "accountant2Email" in value;
    isInstance = isInstance && "accountant3" in value;
    isInstance = isInstance && "accountant3Email" in value;
    isInstance = isInstance && "accountUpdatedOn" in value;
    isInstance = isInstance && "accountUpdatedBy" in value;
    isInstance = isInstance && "accountAddedOn" in value;

    return isInstance;
}

export function AccountDataFromJSON(json: any): AccountData {
    return AccountDataFromJSONTyped(json, false);
}

export function AccountDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'account': json['account'],
        'accountType': AccountTypeFromJSON(json['account_type']),
        'accountRep': json['account_rep'],
        'accountRepEmail': json['account_rep_email'],
        'accountRepId': json['account_rep_id'],
        'accountant1': json['accountant1'],
        'accountant1Email': json['accountant1_email'],
        'accountant2': json['accountant2'],
        'accountant2Email': json['accountant2_email'],
        'accountant3': json['accountant3'],
        'accountant3Email': json['accountant3_email'],
        'accountUpdatedOn': (new Date(json['account_updated_on'])),
        'accountUpdatedBy': json['account_updated_by'],
        'accountAddedOn': (new Date(json['account_added_on'])),
    };
}

export function AccountDataToJSON(value?: AccountData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account': value.account,
        'account_type': AccountTypeToJSON(value.accountType),
        'account_rep': value.accountRep,
        'account_rep_email': value.accountRepEmail,
        'account_rep_id': value.accountRepId,
        'accountant1': value.accountant1,
        'accountant1_email': value.accountant1Email,
        'accountant2': value.accountant2,
        'accountant2_email': value.accountant2Email,
        'accountant3': value.accountant3,
        'accountant3_email': value.accountant3Email,
        'account_updated_on': (value.accountUpdatedOn.toISOString()),
        'account_updated_by': value.accountUpdatedBy,
        'account_added_on': (value.accountAddedOn.toISOString()),
    };
}

